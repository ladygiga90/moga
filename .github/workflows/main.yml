<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>대화로 돕는 시니어 도우미</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Chosen Palette: Warm Neutrals - beige, warm gray, deep brown, and a soft orange accent. -->
    <!-- Application Structure Plan: The SPA is designed as a narrative journey. It starts with a data-driven "Why" (the problem), transitions to an interactive "How" (the app demo), and details the "What" (key features and principles). This structure first establishes the problem's context with a chart, making the user understand the need. Then, it provides a hands-on, simulated experience of the solution, which is more engaging than static descriptions. Finally, it breaks down the features for clarity. This is more user-friendly than mirroring a technical document, as it guides the user from problem to solution logically. -->
    <!-- Visualization & Content Choices: 1. Digital Divide Chart: (Source: General stats on digital literacy) -> Goal: Inform about the problem's scale -> Viz: Bar Chart (Chart.js/Canvas) -> Interaction: Hover to see details -> Justification: A bar chart is the clearest way to compare digital competency across age groups, immediately highlighting the seniors' gap. 2. App Simulation: (Source: User's app design document) -> Goal: Demonstrate the core solution -> Presentation: Interactive HTML mockups -> Interaction: Button clicks trigger modal windows simulating voice and camera functions -> Justification: An interactive demo is far more effective at conveying an app's user experience than static images or text. It allows users to "feel" the app's simplicity. 3. Feature Cards: (Source: User's requirements) -> Goal: Organize and explain key features -> Presentation: Styled HTML/CSS cards -> Interaction: None -> Justification: Cards visually segment information, making the list of features digestible and easy to scan. -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');
        body {
            font-family: 'Noto Sans KR', sans-serif;
            background-color: #FDFBF8;
        }
        .app-container {
            width: 100%;
            max-width: 420px;
            height: 80vh;
            max-height: 750px;
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
            border: 8px solid #333;
            border-radius: 40px;
        }
        .chart-container {
            position: relative;
            width: 100%;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
            height: 300px;
            max-height: 400px;
        }
        @media (min-width: 768px) { .chart-container { height: 350px; } }
        .modal {
            transition: opacity 0.3s ease;
        }
        .wheel-container {
            height: 150px;
            overflow: hidden;
            display: flex;
            justify-content: center;
        }
        .wheel {
            width: 80px;
            text-align: center;
        }
        .wheel-item {
            height: 50px;
            line-height: 50px;
            font-size: 24px;
        }
    </style>
</head>
<body class="text-[#333333]">

    <!-- Header -->
    <header class="text-center py-12 px-4">
        <h1 class="text-4xl md:text-5xl font-bold text-[#4A4A4A]">대화로 돕는 시니어 도우미</h1>
        <p class="mt-4 text-lg md:text-xl text-gray-600 max-w-3xl mx-auto">어르신들의 디지털 장벽을 허물고, 더 쉽고 안전한 일상을 연결합니다.<br>음성 대화와 카메라 인식으로 복잡한 스마트폰 사용법을 대신해 드립니다.</p>
    </header>

    <!-- Main Content -->
    <main class="container mx-auto px-4 pb-16">

        <!-- Section 1: The Problem -->
        <section id="problem" class="mb-20">
            <h2 class="text-3xl font-bold text-center mb-4">가장 큰 장벽, 디지털 격차</h2>
            <p class="text-center text-gray-600 mb-8 max-w-2xl mx-auto">
                스마트폰 보급률은 높아졌지만, 많은 어르신들이 여전히 정보 접근과 활용에 어려움을 겪고 있습니다. 특히 고령층의 디지털 정보화 수준은 다른 계층에 비해 현저히 낮아, 일상 속 불편함이 커지고 있습니다.
            </p>
            <div class="bg-white rounded-2xl p-6 shadow-lg">
                <div class="chart-container">
                    <canvas id="digitalDivideChart"></canvas>
                </div>
            </div>
        </section>

        <!-- Section 2: Interactive App Demo -->
        <section id="demo" class="mb-20">
            <h2 class="text-3xl font-bold text-center mb-4">솔루션: 시니어 도우미 앱 체험</h2>
            <p class="text-center text-gray-600 mb-8 max-w-2xl mx-auto">
                복잡한 화면 대신, '말하기'와 '비추기' 두 가지 핵심 기능으로 모든 것을 해결합니다. 아래 화면을 직접 눌러보며 어떻게 작동하는지 경험해보세요.
            </p>

            <div class="flex justify-center">
                <div id="appScreen" class="app-container bg-white flex flex-col overflow-hidden relative">
                    <!-- App Header -->
                    <div class="bg-orange-100 text-orange-800 text-center p-3 text-sm font-bold">
                        <p>⚠️ 이 앱은 의료 조언을 대체하지 않습니다. 복용량 변경은 반드시 의사, 약사와 상의하세요.</p>
                    </div>

                    <!-- Home Screen -->
                    <div id="homeView" class="flex flex-col flex-grow items-center justify-center p-8 h-full">
                        <div class="flex-grow flex items-center justify-center w-full">
                            <button id="speakBtn" class="bg-orange-500 text-white rounded-full flex items-center justify-center transition-transform transform hover:scale-105 active:scale-95" style="width: 70%; padding-bottom: 70%;">
                                <div class="absolute text-center">
                                    <span class="text-7xl">🎤</span>
                                    <span class="block text-4xl font-bold mt-2">말하기</span>
                                </div>
                            </button>
                        </div>
                        <div class="w-full pt-4">
                            <button id="cameraBtn" class="w-full bg-gray-200 text-gray-800 font-bold py-4 rounded-full flex items-center justify-center gap-4 hover:bg-gray-300" style="min-height: 56px;">
                                <span class="text-3xl">📷</span>
                                <span class="text-2xl">카메라로 비추기</span>
                            </button>
                        </div>
                    </div>

                    <!-- Camera Result Screen -->
                    <div id="cameraResultView" class="hidden flex-col flex-grow p-6 bg-gray-50 h-full overflow-y-auto">
                         <button id="backToHome" class="self-start mb-4 text-lg font-bold text-gray-600 hover:text-black">← 뒤로가기</button>
                        <h3 class="text-2xl font-bold text-center mb-4">인식 결과</h3>
                        <div class="bg-white rounded-xl shadow-md p-6 flex-grow flex flex-col">
                            <div class="text-center">
                                <p class="text-5xl mb-4">💊</p>
                                <h4 class="text-3xl font-bold">타이레놀 500mg</h4>
                                <p class="text-lg text-gray-600 mt-2">두통, 발열 시 1정 복용</p>
                            </div>
                            <div class="mt-8 space-y-4 flex-grow flex flex-col justify-end">
                                <button id="addAlarmBtn" class="w-full bg-orange-500 text-white font-bold py-4 rounded-xl text-2xl hover:bg-orange-600" style="min-height: 56px;">알람 추가</button>
                                <button class="w-full bg-gray-200 text-gray-800 font-bold py-4 rounded-xl text-2xl hover:bg-gray-300" style="min-height: 56px;">가족에게 전화</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Modals -->
        <!-- Speak Modal -->
        <div id="speakModal" class="modal fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center opacity-0 pointer-events-none z-50">
            <div class="bg-white rounded-2xl p-8 m-4 w-full max-w-md text-center">
                <p class="text-2xl text-gray-600 mb-4">"오후 2시에 혈압약 먹으라고 알려줘"</p>
                <div class="animate-pulse my-8">
                    <p class="text-3xl font-bold text-orange-600">듣고 있어요...</p>
                </div>
                <button id="closeSpeakModal" class="mt-6 bg-gray-200 text-gray-800 font-bold py-3 px-8 rounded-full text-lg">닫기</button>
            </div>
        </div>

        <!-- Alarm Modal -->
        <div id="alarmModal" class="modal fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center opacity-0 pointer-events-none z-50">
            <div class="bg-white rounded-2xl p-8 m-4 w-full max-w-md">
                <h3 class="text-3xl font-bold text-center mb-6">알람 추가</h3>
                <div class="bg-gray-100 p-4 rounded-lg mb-6">
                    <p class="text-center text-xl font-bold">타이레놀 500mg</p>
                </div>
                
                <div class="flex items-center justify-center mb-6">
                    <div class="wheel-container">
                        <div class="wheel" id="hourWheel"></div>
                        <div class="flex items-center text-2xl font-bold mx-2">:</div>
                        <div class="wheel" id="minuteWheel"></div>
                    </div>
                </div>

                <div class="space-y-4">
                    <button class="w-full bg-orange-500 text-white font-bold py-4 rounded-xl text-2xl hover:bg-orange-600" style="min-height: 56px;">저장하기</button>
                    <button id="closeAlarmModal" class="w-full bg-gray-200 text-gray-800 font-bold py-4 rounded-xl text-2xl hover:bg-gray-300" style="min-height: 56px;">취소</button>
                </div>
            </div>
        </div>
        
        <!-- Section 3: Key Features -->
        <section id="features" class="mb-20">
            <h2 class="text-3xl font-bold text-center mb-10">핵심 설계 원칙</h2>
            <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-5xl mx-auto">
                <div class="bg-white p-6 rounded-2xl shadow-lg text-center">
                    <p class="text-5xl mb-4">🔍</p>
                    <h3 class="text-2xl font-bold mb-2">큰 글자와 고대비</h3>
                    <p class="text-gray-600">모든 글자는 24pt 이상, 색상 대비를 높여 어르신들이 편안하게 보실 수 있도록 설계했습니다.</p>
                </div>
                <div class="bg-white p-6 rounded-2xl shadow-lg text-center">
                    <p class="text-5xl mb-4">👆</p>
                    <h3 class="text-2xl font-bold mb-2">큼직한 버튼</h3>
                    <p class="text-gray-600">누르기 쉽도록 모든 버튼은 56px 이상의 충분한 크기를 확보하여 오작동을 방지합니다.</p>
                </div>
                <div class="bg-white p-6 rounded-2xl shadow-lg text-center">
                    <p class="text-5xl mb-4">👨‍👩‍👧‍👦</p>
                    <h3 class="text-2xl font-bold mb-2">가족 연결 모드</h3>
                    <p class="text-gray-600">보호자가 '빨간 약=혈압약'처럼 단어를 추가하고, 복약 기록을 안전하게 확인할 수 있습니다.</p>
                </div>
                <div class="bg-white p-6 rounded-2xl shadow-lg text-center">
                    <p class="text-5xl mb-4">🗣️</p>
                    <h3 class="text-2xl font-bold mb-2">느리고 쉬운 음성</h3>
                    <p class="text-gray-600">모든 음성 안내(TTS)는 0.85배속으로 천천히, 문장이 끝나면 잠시 쉬어 이해를 돕습니다.</p>
                </div>
                <div class="bg-white p-6 rounded-2xl shadow-lg text-center">
                    <p class="text-5xl mb-4">⏰</p>
                    <h3 class="text-2xl font-bold mb-2">간편한 복약 알림</h3>
                    <p class="text-gray-600">매일, 평일, 주말 등 반복 설정을 큰 버튼으로 쉽게 관리하고 달력에서 확인할 수 있습니다.</p>
                </div>
                <div class="bg-white p-6 rounded-2xl shadow-lg text-center">
                    <p class="text-5xl mb-4">🌐</p>
                    <h3 class="text-2xl font-bold mb-2">오프라인 지원</h3>
                    <p class="text-gray-600">인터넷이 불안정해도 최근 20개 기록과 자주 쓰는 명령은 저장되어 언제든 사용할 수 있습니다.</p>
                </div>
            </div>
        </section>

    </main>
    
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Chart.js: Digital Divide Visualization
            const ctx = document.getElementById('digitalDivideChart').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['일반 국민', '장애인', '저소득층', '농어민', '65세 이상 고령층'],
                    datasets: [{
                        label: '디지털 정보화 수준 (전체국민=100)',
                        data: [100, 81.7, 94.5, 78.1, 69.2],
                        backgroundColor: [
                            'rgba(200, 200, 200, 0.6)',
                            'rgba(75, 192, 192, 0.6)',
                            'rgba(153, 102, 255, 0.6)',
                            'rgba(255, 159, 64, 0.6)',
                            'rgba(255, 99, 132, 0.6)'
                        ],
                        borderColor: [
                            'rgba(200, 200, 200, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(255, 99, 132, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    indexAxis: 'y',
                    plugins: {
                        legend: {
                            display: false
                        },
                        title: {
                            display: true,
                            text: '계층별 디지털 정보화 수준 비교',
                            font: {
                                size: 18,
                                family: "'Noto Sans KR', sans-serif"
                            },
                            padding: {
                                bottom: 20
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return ` ${context.raw}`;
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            beginAtZero: true,
                            max: 100,
                            title: {
                                display: true,
                                text: '정보화 수준 점수'
                            }
                        },
                        y: {
                            ticks: {
                                font: {
                                    size: 14,
                                }
                            }
                        }
                    }
                }
            });

            // App Demo Interactivity
            const homeView = document.getElementById('homeView');
            const cameraResultView = document.getElementById('cameraResultView');
            const speakBtn = document.getElementById('speakBtn');
            const cameraBtn = document.getElementById('cameraBtn');
            const backToHome = document.getElementById('backToHome');
            
            const speakModal = document.getElementById('speakModal');
            const closeSpeakModal = document.getElementById('closeSpeakModal');
            
            const alarmModal = document.getElementById('alarmModal');
            const addAlarmBtn = document.getElementById('addAlarmBtn');
            const closeAlarmModal = document.getElementById('closeAlarmModal');

            // Show camera result view
            cameraBtn.addEventListener('click', () => {
                homeView.classList.add('hidden');
                cameraResultView.classList.remove('hidden');
                cameraResultView.classList.add('flex');
            });

            // Back to home view
            backToHome.addEventListener('click', () => {
                cameraResultView.classList.add('hidden');
                cameraResultView.classList.remove('flex');
                homeView.classList.remove('hidden');
            });
            
            // Speak Modal
            speakBtn.addEventListener('click', () => {
                speakModal.classList.remove('opacity-0', 'pointer-events-none');
            });

            closeSpeakModal.addEventListener('click', () => {
                speakModal.classList.add('opacity-0', 'pointer-events-none');
            });
            
            // Alarm Modal
            addAlarmBtn.addEventListener('click', () => {
                alarmModal.classList.remove('opacity-0', 'pointer-events-none');
            });
            
            closeAlarmModal.addEventListener('click', () => {
                alarmModal.classList.add('opacity-0', 'pointer-events-none');
            });

            // Time wheel scroller
            function createWheel(containerId, items, defaultIndex) {
                const container = document.getElementById(containerId);
                const wheel = document.createElement('div');
                items.forEach(item => {
                    const itemEl = document.createElement('div');
                    itemEl.classList.add('wheel-item');
                    itemEl.textContent = item;
                    wheel.appendChild(itemEl);
                });
                container.appendChild(wheel);

                let startY, scrollTop;
                
                function setScroll(y) {
                    const itemHeight = 50;
                    const maxScroll = (items.length - 1) * itemHeight;
                    const targetScroll = Math.min(maxScroll, Math.max(0, y));
                    const snapScroll = Math.round(targetScroll / itemHeight) * itemHeight;
                    wheel.style.transition = 'transform 0.2s ease-out';
                    wheel.style.transform = `translateY(${50 - snapScroll}px)`;
                }
                
                wheel.addEventListener('mousedown', (e) => {
                    startY = e.pageY;
                    scrollTop = -parseInt(wheel.style.transform.split('(')[1] || 0) + 50;
                    wheel.style.transition = 'none';
                    document.addEventListener('mousemove', onMouseMove);
                    document.addEventListener('mouseup', onMouseUp);
                });
                
                wheel.addEventListener('touchstart', (e) => {
                    startY = e.touches[0].pageY;
                    scrollTop = -parseInt(wheel.style.transform.split('(')[1] || 0) + 50;
                    wheel.style.transition = 'none';
                    document.addEventListener('touchmove', onTouchMove);
                    document.addEventListener('touchend', onTouchEnd);
                });
                
                function onMouseMove(e) {
                    const dy = e.pageY - startY;
                    setScroll(scrollTop - dy);
                }
                
                function onTouchMove(e) {
                    const dy = e.touches[0].pageY - startY;
                    setScroll(scrollTop - dy);
                }
                
                function onMouseUp() {
                    document.removeEventListener('mousemove', onMouseMove);
                    document.removeEventListener('mouseup', onMouseUp);
                }
                
                function onTouchEnd() {
                    document.removeEventListener('touchmove', onTouchMove);
                    document.removeEventListener('touchend', onTouchEnd);
                }
                
                setScroll(defaultIndex * 50);
            }
            
            const hours = Array.from({length: 12}, (_, i) => String(i + 1).padStart(2, '0'));
            const minutes = Array.from({length: 60}, (_, i) => String(i).padStart(2, '0'));
            
            createWheel('hourWheel', hours, 7); // Default 08
            createWheel('minuteWheel', minutes, 30); // Default 30

        });
    </script>
</body>
</html>
